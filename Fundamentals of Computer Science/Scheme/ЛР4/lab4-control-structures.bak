; Задание А. Условия when и unless
(define-syntax when
  (syntax-rules ()
    ((_ cond? . exprs) (if cond?
                           (begin . exprs)))))
(define-syntax unless
  (syntax-rules ()
    ((_ cond? . exprs) (if (not cond?)
                           (begin . exprs)))))
;(define x 1)
;(when   (> x 0) (display "x > 0")  (newline))
;(unless (= x 0) (display "x != 0") (newline))
; Выведет оба сообщения

;; Задание Б. Циклы for
(define-syntax for
  (syntax-rules (in as)
    ((_ x in xs . exprs) (let loop ((x (car xs))
                                    (ys (cdr xs)))
                           (begin
                             (begin . exprs)
                             (if (not (null? ys))
                                  (loop (car ys) (cdr ys))))))
    ((_ xs as x . exprs) (let loop ((x (car xs))
                                    (ys (cdr xs)))
                           (begin
                             (begin . exprs)
                             (if (not (null? ys))
                                  (loop (car ys) (cdr ys))))))))

;(for i in '(1 2 3)
;  (for j in '(4 5 6)
;    (display (list i j))
;    (newline)))
;(newline)
;(for '(1 2 3) as i
;  (for '(4 5 6) as j
;    (display (list i j))
;    (newline)))

;; Задание В. Цикл while
(define-syntax while
  (syntax-rules ()
    ((_ cond? . exprs) (let iter () (if cond?
                                        (begin
                                          (begin . exprs)
                                          (iter)))))))

;(let ((p 0)
;      (q 0))
;  (while (< p 3)
;         (set! q 0)
;         (while (< q 3)
;                (display (list p q))
;                (newline)
;                (set! q (+ q 1)))
;         (set! p (+ p 1))))

;; Задание Г. Цикл repeat..until
(define-syntax repeat
  (syntax-rules (until)
    ((_ (expr . exprs) until cond?) (let iter ()
                                      (begin expr . exprs)
                                      (if (not cond?)
                                          (iter))))))

;(let ((i 0)
;      (j 0))
;  (repeat ((set! j 0)
;           (repeat ((display (list i j))
;                    (set! j (+ j 1)))
;                   until (= j 3))
;           (set! i (+ i 1))
;           (newline))
;          until (= i 3)))

;; Задание Д. Вывод «в стиле С++»
(define-syntax cout
  (syntax-rules (endl <<)
    ((_ << endl) (newline))
    ((_ << endl . expr) (begin
                          (newline)
                          (cout . expr)))
    ((_ << expr1 . expr2) (begin
                            (display expr1)
                            (cout . expr2)))))

; (cout << "a = " << 1 << endl << "b = " << 2 << endl)


                                
