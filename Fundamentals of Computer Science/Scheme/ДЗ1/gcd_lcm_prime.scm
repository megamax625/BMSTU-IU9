(define (my-gcd a b)
  (if (= (- a b) 0)
      a
      (if (< a b)
          (my-gcd a (- b a))
          (my-gcd (- a b) b))))
(define (my-lcm a b)
  (/ (* a b) (my-gcd a b)))
(define (prime? n)
  (define (compare n d)
    (if (and (> (remainder n d) 0) (< d n))
        (compare n (+ d 1))
        (= d n)))
  (compare n 2))